// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        (unknown)
// source: api/proto/v1/store_manager.proto

// This document describes the store manager API for NBN23 SwishPay platform.

package _go

import (
	_ "buf.build/gen/go/bufbuild/protovalidate/protocolbuffers/go/buf/validate"
	_ "github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-openapiv2/options"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// UserProvider
//
// UserProvider represents the provider of the user.
type UserProvider int32

const (
	UserProvider_USER_PROVIDER_UNSPECIFIED UserProvider = 0
	// USER_PROVIDER_APPLE represents a user registered through Apple.
	UserProvider_USER_PROVIDER_APPLE UserProvider = 1
	// USER_PROVIDER_GOOGLE represents a user registered through Google.
	UserProvider_USER_PROVIDER_GOOGLE UserProvider = 2
	// USER_PROVIDER_CUSTOM represents a user registered through email and password.
	UserProvider_USER_PROVIDER_CUSTOM UserProvider = 3
)

// Enum value maps for UserProvider.
var (
	UserProvider_name = map[int32]string{
		0: "USER_PROVIDER_UNSPECIFIED",
		1: "USER_PROVIDER_APPLE",
		2: "USER_PROVIDER_GOOGLE",
		3: "USER_PROVIDER_CUSTOM",
	}
	UserProvider_value = map[string]int32{
		"USER_PROVIDER_UNSPECIFIED": 0,
		"USER_PROVIDER_APPLE":       1,
		"USER_PROVIDER_GOOGLE":      2,
		"USER_PROVIDER_CUSTOM":      3,
	}
)

func (x UserProvider) Enum() *UserProvider {
	p := new(UserProvider)
	*p = x
	return p
}

func (x UserProvider) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (UserProvider) Descriptor() protoreflect.EnumDescriptor {
	return file_api_proto_v1_store_manager_proto_enumTypes[0].Descriptor()
}

func (UserProvider) Type() protoreflect.EnumType {
	return &file_api_proto_v1_store_manager_proto_enumTypes[0]
}

func (x UserProvider) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use UserProvider.Descriptor instead.
func (UserProvider) EnumDescriptor() ([]byte, []int) {
	return file_api_proto_v1_store_manager_proto_rawDescGZIP(), []int{0}
}

// SubscriptionType
//
// SubscriptionType represents the type of subscription that a user has purchased.
type SubscriptionType int32

const (
	SubscriptionType_SUBSCRIPTION_TYPE_UNSPECIFIED SubscriptionType = 0
	// SUBSCRIPTION_TYPE_TRIAL represents a trial subscription.
	SubscriptionType_SUBSCRIPTION_TYPE_TRIAL SubscriptionType = 1
	// SUBSCRIPTION_TYPE_PREMIUM represents a premium subscription.
	SubscriptionType_SUBSCRIPTION_TYPE_PREMIUM SubscriptionType = 2
	// SUBSCRIPTION_TYPE_MANUAL_PREMIUM represents a manual premium subscription.
	SubscriptionType_SUBSCRIPTION_TYPE_MANUAL_PREMIUM SubscriptionType = 3
	// SUBSCRIPTION_TYPE_FREE represents a user with no subscription.
	SubscriptionType_SUBSCRIPTION_TYPE_FREE SubscriptionType = 4
)

// Enum value maps for SubscriptionType.
var (
	SubscriptionType_name = map[int32]string{
		0: "SUBSCRIPTION_TYPE_UNSPECIFIED",
		1: "SUBSCRIPTION_TYPE_TRIAL",
		2: "SUBSCRIPTION_TYPE_PREMIUM",
		3: "SUBSCRIPTION_TYPE_MANUAL_PREMIUM",
		4: "SUBSCRIPTION_TYPE_FREE",
	}
	SubscriptionType_value = map[string]int32{
		"SUBSCRIPTION_TYPE_UNSPECIFIED":    0,
		"SUBSCRIPTION_TYPE_TRIAL":          1,
		"SUBSCRIPTION_TYPE_PREMIUM":        2,
		"SUBSCRIPTION_TYPE_MANUAL_PREMIUM": 3,
		"SUBSCRIPTION_TYPE_FREE":           4,
	}
)

func (x SubscriptionType) Enum() *SubscriptionType {
	p := new(SubscriptionType)
	*p = x
	return p
}

func (x SubscriptionType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SubscriptionType) Descriptor() protoreflect.EnumDescriptor {
	return file_api_proto_v1_store_manager_proto_enumTypes[1].Descriptor()
}

func (SubscriptionType) Type() protoreflect.EnumType {
	return &file_api_proto_v1_store_manager_proto_enumTypes[1]
}

func (x SubscriptionType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SubscriptionType.Descriptor instead.
func (SubscriptionType) EnumDescriptor() ([]byte, []int) {
	return file_api_proto_v1_store_manager_proto_rawDescGZIP(), []int{1}
}

// SubscriptionCode
//
// SubscriptionCode represents the code of the subscription.
type SubscriptionCode int32

const (
	SubscriptionCode_SUBSCRIPTION_CODE_UNSPECIFIED SubscriptionCode = 0
	// SUBSCRIPTION_CODE_STARTED represents that a subscription has started.
	SubscriptionCode_SUBSCRIPTION_CODE_STARTED SubscriptionCode = 1
	// SUBSCRIPTION_CODE_RENEWED represents that a subscription has been renewed.
	SubscriptionCode_SUBSCRIPTION_CODE_RENEWED SubscriptionCode = 2
	// SUBSCRIPTION_CODE_CANCELLED represents that a subscription has been cancelled.
	SubscriptionCode_SUBSCRIPTION_CODE_CANCELLED SubscriptionCode = 3
	// SUBSCRIPTION_CODE_EXPIRED represents that a subscription has expired.
	SubscriptionCode_SUBSCRIPTION_CODE_EXPIRED SubscriptionCode = 4
)

// Enum value maps for SubscriptionCode.
var (
	SubscriptionCode_name = map[int32]string{
		0: "SUBSCRIPTION_CODE_UNSPECIFIED",
		1: "SUBSCRIPTION_CODE_STARTED",
		2: "SUBSCRIPTION_CODE_RENEWED",
		3: "SUBSCRIPTION_CODE_CANCELLED",
		4: "SUBSCRIPTION_CODE_EXPIRED",
	}
	SubscriptionCode_value = map[string]int32{
		"SUBSCRIPTION_CODE_UNSPECIFIED": 0,
		"SUBSCRIPTION_CODE_STARTED":     1,
		"SUBSCRIPTION_CODE_RENEWED":     2,
		"SUBSCRIPTION_CODE_CANCELLED":   3,
		"SUBSCRIPTION_CODE_EXPIRED":     4,
	}
)

func (x SubscriptionCode) Enum() *SubscriptionCode {
	p := new(SubscriptionCode)
	*p = x
	return p
}

func (x SubscriptionCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SubscriptionCode) Descriptor() protoreflect.EnumDescriptor {
	return file_api_proto_v1_store_manager_proto_enumTypes[2].Descriptor()
}

func (SubscriptionCode) Type() protoreflect.EnumType {
	return &file_api_proto_v1_store_manager_proto_enumTypes[2]
}

func (x SubscriptionCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SubscriptionCode.Descriptor instead.
func (SubscriptionCode) EnumDescriptor() ([]byte, []int) {
	return file_api_proto_v1_store_manager_proto_rawDescGZIP(), []int{2}
}

// SubscriptionProvider
//
// SubscriptionProvider represents the provider of the subscription.
type SubscriptionProvider int32

const (
	SubscriptionProvider_SUBSCRIPTION_PROVIDER_UNSPECIFIED SubscriptionProvider = 0
	// SUBSCRIPTION_PROVIDER_APPLE represents a subscription purchased through Apple.
	SubscriptionProvider_SUBSCRIPTION_PROVIDER_APPLE SubscriptionProvider = 1
	// SUBSCRIPTION_PROVIDER_GOOGLE represents a subscription purchased through Google.
	SubscriptionProvider_SUBSCRIPTION_PROVIDER_GOOGLE SubscriptionProvider = 2
	// SUBSCRIPTION_PROVIDER_STRIPE represents a subscription purchased through Stripe.
	SubscriptionProvider_SUBSCRIPTION_PROVIDER_STRIPE SubscriptionProvider = 3
	// SUBSCRIPTION_PROVIDER_PAYCOMET represents a subscription purchased through Paycomet.
	SubscriptionProvider_SUBSCRIPTION_PROVIDER_PAYCOMET SubscriptionProvider = 4
)

// Enum value maps for SubscriptionProvider.
var (
	SubscriptionProvider_name = map[int32]string{
		0: "SUBSCRIPTION_PROVIDER_UNSPECIFIED",
		1: "SUBSCRIPTION_PROVIDER_APPLE",
		2: "SUBSCRIPTION_PROVIDER_GOOGLE",
		3: "SUBSCRIPTION_PROVIDER_STRIPE",
		4: "SUBSCRIPTION_PROVIDER_PAYCOMET",
	}
	SubscriptionProvider_value = map[string]int32{
		"SUBSCRIPTION_PROVIDER_UNSPECIFIED": 0,
		"SUBSCRIPTION_PROVIDER_APPLE":       1,
		"SUBSCRIPTION_PROVIDER_GOOGLE":      2,
		"SUBSCRIPTION_PROVIDER_STRIPE":      3,
		"SUBSCRIPTION_PROVIDER_PAYCOMET":    4,
	}
)

func (x SubscriptionProvider) Enum() *SubscriptionProvider {
	p := new(SubscriptionProvider)
	*p = x
	return p
}

func (x SubscriptionProvider) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SubscriptionProvider) Descriptor() protoreflect.EnumDescriptor {
	return file_api_proto_v1_store_manager_proto_enumTypes[3].Descriptor()
}

func (SubscriptionProvider) Type() protoreflect.EnumType {
	return &file_api_proto_v1_store_manager_proto_enumTypes[3]
}

func (x SubscriptionProvider) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SubscriptionProvider.Descriptor instead.
func (SubscriptionProvider) EnumDescriptor() ([]byte, []int) {
	return file_api_proto_v1_store_manager_proto_rawDescGZIP(), []int{3}
}

// SubscriptionCategory
//
// SubscriptionCategory represents the category of the subscription.
type SubscriptionCategory int32

const (
	SubscriptionCategory_SUBSCRIPTION_CATEGORY_UNSPECIFIED SubscriptionCategory = 0
	// SUBSCRIPTION_CATEGORY_GIFT represents a subscription purchased as a gift.
	SubscriptionCategory_SUBSCRIPTION_CATEGORY_GIFT SubscriptionCategory = 1
	// SUBSCRIPTION_CATEGORY_GROUP represents a subscription purchased as a group.
	SubscriptionCategory_SUBSCRIPTION_CATEGORY_GROUP SubscriptionCategory = 2
)

// Enum value maps for SubscriptionCategory.
var (
	SubscriptionCategory_name = map[int32]string{
		0: "SUBSCRIPTION_CATEGORY_UNSPECIFIED",
		1: "SUBSCRIPTION_CATEGORY_GIFT",
		2: "SUBSCRIPTION_CATEGORY_GROUP",
	}
	SubscriptionCategory_value = map[string]int32{
		"SUBSCRIPTION_CATEGORY_UNSPECIFIED": 0,
		"SUBSCRIPTION_CATEGORY_GIFT":        1,
		"SUBSCRIPTION_CATEGORY_GROUP":       2,
	}
)

func (x SubscriptionCategory) Enum() *SubscriptionCategory {
	p := new(SubscriptionCategory)
	*p = x
	return p
}

func (x SubscriptionCategory) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SubscriptionCategory) Descriptor() protoreflect.EnumDescriptor {
	return file_api_proto_v1_store_manager_proto_enumTypes[4].Descriptor()
}

func (SubscriptionCategory) Type() protoreflect.EnumType {
	return &file_api_proto_v1_store_manager_proto_enumTypes[4]
}

func (x SubscriptionCategory) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SubscriptionCategory.Descriptor instead.
func (SubscriptionCategory) EnumDescriptor() ([]byte, []int) {
	return file_api_proto_v1_store_manager_proto_rawDescGZIP(), []int{4}
}

// SubscriptionPayload
//
// SubscriptionPayload represents the payload of a subscription.
type SubscriptionPayload struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// product_id is the unique identifier of the product.
	ProductId string `protobuf:"bytes,1,opt,name=product_id,json=productId,proto3" json:"product_id,omitempty"`
	// purchase_token is the purchase token of the subscription.
	PurchaseToken string `protobuf:"bytes,2,opt,name=purchase_token,json=purchaseToken,proto3" json:"purchase_token,omitempty"`
	// provider is the provider of the subscription.
	Provider SubscriptionProvider `protobuf:"varint,3,opt,name=provider,proto3,enum=store_manager.v1.SubscriptionProvider" json:"provider,omitempty"`
	// purchased_at is the time when the subscription was purchased.
	PurchasedAt *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=purchased_at,json=purchasedAt,proto3" json:"purchased_at,omitempty"`
	// expires_at is the time when the subscription expires.
	ExpiresAt *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=expires_at,json=expiresAt,proto3" json:"expires_at,omitempty"`
}

func (x *SubscriptionPayload) Reset() {
	*x = SubscriptionPayload{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_v1_store_manager_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubscriptionPayload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscriptionPayload) ProtoMessage() {}

func (x *SubscriptionPayload) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_v1_store_manager_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscriptionPayload.ProtoReflect.Descriptor instead.
func (*SubscriptionPayload) Descriptor() ([]byte, []int) {
	return file_api_proto_v1_store_manager_proto_rawDescGZIP(), []int{0}
}

func (x *SubscriptionPayload) GetProductId() string {
	if x != nil {
		return x.ProductId
	}
	return ""
}

func (x *SubscriptionPayload) GetPurchaseToken() string {
	if x != nil {
		return x.PurchaseToken
	}
	return ""
}

func (x *SubscriptionPayload) GetProvider() SubscriptionProvider {
	if x != nil {
		return x.Provider
	}
	return SubscriptionProvider_SUBSCRIPTION_PROVIDER_UNSPECIFIED
}

func (x *SubscriptionPayload) GetPurchasedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.PurchasedAt
	}
	return nil
}

func (x *SubscriptionPayload) GetExpiresAt() *timestamppb.Timestamp {
	if x != nil {
		return x.ExpiresAt
	}
	return nil
}

// ProductPayload
//
// ProductPayload represents the payload of a product.
type ProductPayload struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// members is the number of members that the subscription has.
	Members *int32 `protobuf:"varint,1,opt,name=members,proto3,oneof" json:"members,omitempty"`
	// member_emails is the list of emails of the members of the subscription.
	MemberEmails []string `protobuf:"bytes,2,rep,name=member_emails,json=memberEmails,proto3" json:"member_emails,omitempty"`
	// owner_id is the unique identifier of the owner of the subscription.
	OwnerId *string `protobuf:"bytes,3,opt,name=owner_id,json=ownerId,proto3,oneof" json:"owner_id,omitempty"`
	// gifted_id is the unique identifier of the user who gifted the subscription.
	GiftedId *string `protobuf:"bytes,4,opt,name=gifted_id,json=giftedId,proto3,oneof" json:"gifted_id,omitempty"`
}

func (x *ProductPayload) Reset() {
	*x = ProductPayload{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_v1_store_manager_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProductPayload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProductPayload) ProtoMessage() {}

func (x *ProductPayload) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_v1_store_manager_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProductPayload.ProtoReflect.Descriptor instead.
func (*ProductPayload) Descriptor() ([]byte, []int) {
	return file_api_proto_v1_store_manager_proto_rawDescGZIP(), []int{1}
}

func (x *ProductPayload) GetMembers() int32 {
	if x != nil && x.Members != nil {
		return *x.Members
	}
	return 0
}

func (x *ProductPayload) GetMemberEmails() []string {
	if x != nil {
		return x.MemberEmails
	}
	return nil
}

func (x *ProductPayload) GetOwnerId() string {
	if x != nil && x.OwnerId != nil {
		return *x.OwnerId
	}
	return ""
}

func (x *ProductPayload) GetGiftedId() string {
	if x != nil && x.GiftedId != nil {
		return *x.GiftedId
	}
	return ""
}

// Subscription
//
// Subscription represents a subscription that a user has purchased.
type Subscription struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// user_id is the unique identifier of the user.
	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	// app_id is the unique identifier of the application.
	AppId string `protobuf:"bytes,2,opt,name=app_id,json=appId,proto3" json:"app_id,omitempty"`
	// type is the type of the subscription.
	Type SubscriptionType `protobuf:"varint,3,opt,name=type,proto3,enum=store_manager.v1.SubscriptionType" json:"type,omitempty"`
	// code is the code of the subscription.
	Code *SubscriptionCode `protobuf:"varint,4,opt,name=code,proto3,enum=store_manager.v1.SubscriptionCode,oneof" json:"code,omitempty"`
	// category is the category of the subscription.
	Category *SubscriptionCategory `protobuf:"varint,5,opt,name=category,proto3,enum=store_manager.v1.SubscriptionCategory,oneof" json:"category,omitempty"`
	// subscription_payload is the payload of the subscription.
	SubscriptionPayload *SubscriptionPayload `protobuf:"bytes,6,opt,name=subscription_payload,json=subscriptionPayload,proto3,oneof" json:"subscription_payload,omitempty"`
	// product_payload is the payload of the product.
	ProductPayload *ProductPayload `protobuf:"bytes,7,opt,name=product_payload,json=productPayload,proto3,oneof" json:"product_payload,omitempty"`
}

func (x *Subscription) Reset() {
	*x = Subscription{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_v1_store_manager_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Subscription) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Subscription) ProtoMessage() {}

func (x *Subscription) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_v1_store_manager_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Subscription.ProtoReflect.Descriptor instead.
func (*Subscription) Descriptor() ([]byte, []int) {
	return file_api_proto_v1_store_manager_proto_rawDescGZIP(), []int{2}
}

func (x *Subscription) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *Subscription) GetAppId() string {
	if x != nil {
		return x.AppId
	}
	return ""
}

func (x *Subscription) GetType() SubscriptionType {
	if x != nil {
		return x.Type
	}
	return SubscriptionType_SUBSCRIPTION_TYPE_UNSPECIFIED
}

func (x *Subscription) GetCode() SubscriptionCode {
	if x != nil && x.Code != nil {
		return *x.Code
	}
	return SubscriptionCode_SUBSCRIPTION_CODE_UNSPECIFIED
}

func (x *Subscription) GetCategory() SubscriptionCategory {
	if x != nil && x.Category != nil {
		return *x.Category
	}
	return SubscriptionCategory_SUBSCRIPTION_CATEGORY_UNSPECIFIED
}

func (x *Subscription) GetSubscriptionPayload() *SubscriptionPayload {
	if x != nil {
		return x.SubscriptionPayload
	}
	return nil
}

func (x *Subscription) GetProductPayload() *ProductPayload {
	if x != nil {
		return x.ProductPayload
	}
	return nil
}

// PrivacyPolicy
//
// PrivacyPolicy represents a privacy policy accepted by the user.
type PrivacyPolicy struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// version is the version of the privacy policy.
	Version string `protobuf:"bytes,1,opt,name=version,proto3" json:"version,omitempty"`
	// policy_date is the date when the privacy policy was created.
	PolicyDate *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=policy_date,json=policyDate,proto3" json:"policy_date,omitempty"`
	// accepted_date is the date when the privacy policy was accepted.
	AcceptedDate *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=accepted_date,json=acceptedDate,proto3" json:"accepted_date,omitempty"`
	// business_communications is the acceptance of business communications.
	BusinessCommunications bool `protobuf:"varint,4,opt,name=business_communications,json=businessCommunications,proto3" json:"business_communications,omitempty"`
	// marketing_segmentation is the acceptance of marketing segmentation.
	MarketingSegmentation bool `protobuf:"varint,5,opt,name=marketing_segmentation,json=marketingSegmentation,proto3" json:"marketing_segmentation,omitempty"`
	// data_transfer is the acceptance of data transfer.
	DataTransfer bool `protobuf:"varint,6,opt,name=data_transfer,json=dataTransfer,proto3" json:"data_transfer,omitempty"`
}

func (x *PrivacyPolicy) Reset() {
	*x = PrivacyPolicy{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_v1_store_manager_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PrivacyPolicy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PrivacyPolicy) ProtoMessage() {}

func (x *PrivacyPolicy) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_v1_store_manager_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PrivacyPolicy.ProtoReflect.Descriptor instead.
func (*PrivacyPolicy) Descriptor() ([]byte, []int) {
	return file_api_proto_v1_store_manager_proto_rawDescGZIP(), []int{3}
}

func (x *PrivacyPolicy) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *PrivacyPolicy) GetPolicyDate() *timestamppb.Timestamp {
	if x != nil {
		return x.PolicyDate
	}
	return nil
}

func (x *PrivacyPolicy) GetAcceptedDate() *timestamppb.Timestamp {
	if x != nil {
		return x.AcceptedDate
	}
	return nil
}

func (x *PrivacyPolicy) GetBusinessCommunications() bool {
	if x != nil {
		return x.BusinessCommunications
	}
	return false
}

func (x *PrivacyPolicy) GetMarketingSegmentation() bool {
	if x != nil {
		return x.MarketingSegmentation
	}
	return false
}

func (x *PrivacyPolicy) GetDataTransfer() bool {
	if x != nil {
		return x.DataTransfer
	}
	return false
}

// User
//
// User represents a user of the application.
type User struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// id is the unique identifier of the user.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// email is the email of the user.
	Email string `protobuf:"bytes,2,opt,name=email,proto3" json:"email,omitempty"`
	// name is the name of the user.
	Name *string `protobuf:"bytes,3,opt,name=name,proto3,oneof" json:"name,omitempty"`
	// image is the image URL of the user.
	Image *string `protobuf:"bytes,4,opt,name=image,proto3,oneof" json:"image,omitempty"`
	// provider is the provider of the user.
	Provider UserProvider `protobuf:"varint,5,opt,name=provider,proto3,enum=store_manager.v1.UserProvider" json:"provider,omitempty"`
	// privacy_policies is the list of privacy policies accepted by the user.
	PrivacyPolicies []*PrivacyPolicy `protobuf:"bytes,6,rep,name=privacy_policies,json=privacyPolicies,proto3" json:"privacy_policies,omitempty"`
}

func (x *User) Reset() {
	*x = User{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_v1_store_manager_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *User) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*User) ProtoMessage() {}

func (x *User) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_v1_store_manager_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use User.ProtoReflect.Descriptor instead.
func (*User) Descriptor() ([]byte, []int) {
	return file_api_proto_v1_store_manager_proto_rawDescGZIP(), []int{4}
}

func (x *User) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *User) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *User) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *User) GetImage() string {
	if x != nil && x.Image != nil {
		return *x.Image
	}
	return ""
}

func (x *User) GetProvider() UserProvider {
	if x != nil {
		return x.Provider
	}
	return UserProvider_USER_PROVIDER_UNSPECIFIED
}

func (x *User) GetPrivacyPolicies() []*PrivacyPolicy {
	if x != nil {
		return x.PrivacyPolicies
	}
	return nil
}

// CreateUserRequest
//
// CreateUserRequest represents a request to create a user.
type CreateUserRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// user_id is the unique identifier of the user.
	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	// app_id is the unique identifier of the application.
	AppId string `protobuf:"bytes,2,opt,name=app_id,json=appId,proto3" json:"app_id,omitempty"`
	// email is the email of the user.
	Email string `protobuf:"bytes,3,opt,name=email,proto3" json:"email,omitempty"`
	// name is the name of the user.
	Name *string `protobuf:"bytes,4,opt,name=name,proto3,oneof" json:"name,omitempty"`
	// image is the image URL of the user.
	Image *string `protobuf:"bytes,5,opt,name=image,proto3,oneof" json:"image,omitempty"`
	// provider is the provider of the user.
	Provider UserProvider `protobuf:"varint,6,opt,name=provider,proto3,enum=store_manager.v1.UserProvider" json:"provider,omitempty"`
}

func (x *CreateUserRequest) Reset() {
	*x = CreateUserRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_v1_store_manager_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateUserRequest) ProtoMessage() {}

func (x *CreateUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_v1_store_manager_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateUserRequest.ProtoReflect.Descriptor instead.
func (*CreateUserRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_v1_store_manager_proto_rawDescGZIP(), []int{5}
}

func (x *CreateUserRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *CreateUserRequest) GetAppId() string {
	if x != nil {
		return x.AppId
	}
	return ""
}

func (x *CreateUserRequest) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *CreateUserRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *CreateUserRequest) GetImage() string {
	if x != nil && x.Image != nil {
		return *x.Image
	}
	return ""
}

func (x *CreateUserRequest) GetProvider() UserProvider {
	if x != nil {
		return x.Provider
	}
	return UserProvider_USER_PROVIDER_UNSPECIFIED
}

// ReadUserRequest
//
// ReadUserRequest represents a request to get a user.
type ReadUserRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// user_id is the unique identifier of the user.
	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	// app_id is the unique identifier of the application.
	AppId string `protobuf:"bytes,2,opt,name=app_id,json=appId,proto3" json:"app_id,omitempty"`
}

func (x *ReadUserRequest) Reset() {
	*x = ReadUserRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_v1_store_manager_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReadUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadUserRequest) ProtoMessage() {}

func (x *ReadUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_v1_store_manager_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadUserRequest.ProtoReflect.Descriptor instead.
func (*ReadUserRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_v1_store_manager_proto_rawDescGZIP(), []int{6}
}

func (x *ReadUserRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *ReadUserRequest) GetAppId() string {
	if x != nil {
		return x.AppId
	}
	return ""
}

// ReadUserByEmailRequest
//
// ReadUserByEmailRequest represents a request to get a user by email.
type ReadUserByEmailRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// email is the email of the user.
	Email string `protobuf:"bytes,1,opt,name=email,proto3" json:"email,omitempty"`
	// app_id is the unique identifier of the application.
	AppId string `protobuf:"bytes,2,opt,name=app_id,json=appId,proto3" json:"app_id,omitempty"`
}

func (x *ReadUserByEmailRequest) Reset() {
	*x = ReadUserByEmailRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_v1_store_manager_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReadUserByEmailRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadUserByEmailRequest) ProtoMessage() {}

func (x *ReadUserByEmailRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_v1_store_manager_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadUserByEmailRequest.ProtoReflect.Descriptor instead.
func (*ReadUserByEmailRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_v1_store_manager_proto_rawDescGZIP(), []int{7}
}

func (x *ReadUserByEmailRequest) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *ReadUserByEmailRequest) GetAppId() string {
	if x != nil {
		return x.AppId
	}
	return ""
}

// UpdateUserRequest
//
// UpdateUserRequest represents a request to update a user.
type UpdateUserRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// user_id is the unique identifier of the user.
	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	// app_id is the unique identifier of the application.
	AppId string `protobuf:"bytes,2,opt,name=app_id,json=appId,proto3" json:"app_id,omitempty"`
	// name is the name of the user.
	Name *string `protobuf:"bytes,4,opt,name=name,proto3,oneof" json:"name,omitempty"`
	// image is the image URL of the user.
	Image *string `protobuf:"bytes,5,opt,name=image,proto3,oneof" json:"image,omitempty"`
	// provider is the provider of the user.
	Provider *UserProvider `protobuf:"varint,6,opt,name=provider,proto3,enum=store_manager.v1.UserProvider,oneof" json:"provider,omitempty"`
}

func (x *UpdateUserRequest) Reset() {
	*x = UpdateUserRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_v1_store_manager_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateUserRequest) ProtoMessage() {}

func (x *UpdateUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_v1_store_manager_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateUserRequest.ProtoReflect.Descriptor instead.
func (*UpdateUserRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_v1_store_manager_proto_rawDescGZIP(), []int{8}
}

func (x *UpdateUserRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *UpdateUserRequest) GetAppId() string {
	if x != nil {
		return x.AppId
	}
	return ""
}

func (x *UpdateUserRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *UpdateUserRequest) GetImage() string {
	if x != nil && x.Image != nil {
		return *x.Image
	}
	return ""
}

func (x *UpdateUserRequest) GetProvider() UserProvider {
	if x != nil && x.Provider != nil {
		return *x.Provider
	}
	return UserProvider_USER_PROVIDER_UNSPECIFIED
}

// DeleteUserRequest
//
// DeleteUserRequest represents a request to delete a user.
type DeleteUserRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// user_id is the unique identifier of the user.
	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	// app_id is the unique identifier of the application.
	AppId string `protobuf:"bytes,2,opt,name=app_id,json=appId,proto3" json:"app_id,omitempty"`
}

func (x *DeleteUserRequest) Reset() {
	*x = DeleteUserRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_v1_store_manager_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteUserRequest) ProtoMessage() {}

func (x *DeleteUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_v1_store_manager_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteUserRequest.ProtoReflect.Descriptor instead.
func (*DeleteUserRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_v1_store_manager_proto_rawDescGZIP(), []int{9}
}

func (x *DeleteUserRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *DeleteUserRequest) GetAppId() string {
	if x != nil {
		return x.AppId
	}
	return ""
}

// UpsertPrivacyPolicyRequest
//
// UpsertPrivacyPolicyRequest represents a request to create or update the privacy policy of a user.
type UpsertPrivacyPolicyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// user_id is the unique identifier of the user.
	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	// app_id is the unique identifier of the application.
	AppId string `protobuf:"bytes,2,opt,name=app_id,json=appId,proto3" json:"app_id,omitempty"`
	// business_communications is the acceptance of business communications.
	BusinessCommunications bool `protobuf:"varint,3,opt,name=business_communications,json=businessCommunications,proto3" json:"business_communications,omitempty"`
	// marketing_segmentation is the acceptance of marketing segmentation.
	MarketingSegmentation bool `protobuf:"varint,4,opt,name=marketing_segmentation,json=marketingSegmentation,proto3" json:"marketing_segmentation,omitempty"`
	// data_transfer is the acceptance of data transfer.
	DataTransfer bool `protobuf:"varint,5,opt,name=data_transfer,json=dataTransfer,proto3" json:"data_transfer,omitempty"`
}

func (x *UpsertPrivacyPolicyRequest) Reset() {
	*x = UpsertPrivacyPolicyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_v1_store_manager_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpsertPrivacyPolicyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpsertPrivacyPolicyRequest) ProtoMessage() {}

func (x *UpsertPrivacyPolicyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_v1_store_manager_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpsertPrivacyPolicyRequest.ProtoReflect.Descriptor instead.
func (*UpsertPrivacyPolicyRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_v1_store_manager_proto_rawDescGZIP(), []int{10}
}

func (x *UpsertPrivacyPolicyRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *UpsertPrivacyPolicyRequest) GetAppId() string {
	if x != nil {
		return x.AppId
	}
	return ""
}

func (x *UpsertPrivacyPolicyRequest) GetBusinessCommunications() bool {
	if x != nil {
		return x.BusinessCommunications
	}
	return false
}

func (x *UpsertPrivacyPolicyRequest) GetMarketingSegmentation() bool {
	if x != nil {
		return x.MarketingSegmentation
	}
	return false
}

func (x *UpsertPrivacyPolicyRequest) GetDataTransfer() bool {
	if x != nil {
		return x.DataTransfer
	}
	return false
}

// ReadSubscriptionRequest
//
// ReadSubscriptionRequest represents a request to get a subscription.
type ReadSubscriptionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// user_id is the unique identifier of the user.
	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	// app_id is the unique identifier of the application.
	AppId string `protobuf:"bytes,2,opt,name=app_id,json=appId,proto3" json:"app_id,omitempty"`
}

func (x *ReadSubscriptionRequest) Reset() {
	*x = ReadSubscriptionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_v1_store_manager_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReadSubscriptionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadSubscriptionRequest) ProtoMessage() {}

func (x *ReadSubscriptionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_v1_store_manager_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadSubscriptionRequest.ProtoReflect.Descriptor instead.
func (*ReadSubscriptionRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_v1_store_manager_proto_rawDescGZIP(), []int{11}
}

func (x *ReadSubscriptionRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *ReadSubscriptionRequest) GetAppId() string {
	if x != nil {
		return x.AppId
	}
	return ""
}

// AddMemberRequest
//
// AddMemberRequest represents a request to add a member to a subscription.
type AddMemberRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// user_id is the unique identifier of the user.
	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	// app_id is the unique identifier of the application.
	AppId string `protobuf:"bytes,2,opt,name=app_id,json=appId,proto3" json:"app_id,omitempty"`
	// recipient is the email of the member to add to the subscription.
	Recipient string `protobuf:"bytes,3,opt,name=recipient,proto3" json:"recipient,omitempty"`
}

func (x *AddMemberRequest) Reset() {
	*x = AddMemberRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_v1_store_manager_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddMemberRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddMemberRequest) ProtoMessage() {}

func (x *AddMemberRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_v1_store_manager_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddMemberRequest.ProtoReflect.Descriptor instead.
func (*AddMemberRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_v1_store_manager_proto_rawDescGZIP(), []int{12}
}

func (x *AddMemberRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *AddMemberRequest) GetAppId() string {
	if x != nil {
		return x.AppId
	}
	return ""
}

func (x *AddMemberRequest) GetRecipient() string {
	if x != nil {
		return x.Recipient
	}
	return ""
}

// RemoveMemberRequest
//
// RemoveMemberRequest represents a request to remove a member from a subscription.
type RemoveMemberRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// user_id is the unique identifier of the user.
	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	// app_id is the unique identifier of the application.
	AppId string `protobuf:"bytes,2,opt,name=app_id,json=appId,proto3" json:"app_id,omitempty"`
	// recipient is the email of the member to remove from the subscription.
	Recipient string `protobuf:"bytes,4,opt,name=recipient,proto3" json:"recipient,omitempty"`
}

func (x *RemoveMemberRequest) Reset() {
	*x = RemoveMemberRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_v1_store_manager_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveMemberRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveMemberRequest) ProtoMessage() {}

func (x *RemoveMemberRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_v1_store_manager_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveMemberRequest.ProtoReflect.Descriptor instead.
func (*RemoveMemberRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_v1_store_manager_proto_rawDescGZIP(), []int{13}
}

func (x *RemoveMemberRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *RemoveMemberRequest) GetAppId() string {
	if x != nil {
		return x.AppId
	}
	return ""
}

func (x *RemoveMemberRequest) GetRecipient() string {
	if x != nil {
		return x.Recipient
	}
	return ""
}

// CreateUserResponse
//
// CreateUserResponse represents a response to create a user.
type CreateUserResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// success is the success of the operation.
	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
}

func (x *CreateUserResponse) Reset() {
	*x = CreateUserResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_v1_store_manager_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateUserResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateUserResponse) ProtoMessage() {}

func (x *CreateUserResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_v1_store_manager_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateUserResponse.ProtoReflect.Descriptor instead.
func (*CreateUserResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_v1_store_manager_proto_rawDescGZIP(), []int{14}
}

func (x *CreateUserResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

// ReadUserResponse
//
// ReadUserResponse represents a response to get a user.
type ReadUserResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// user is the user.
	User *User `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
}

func (x *ReadUserResponse) Reset() {
	*x = ReadUserResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_v1_store_manager_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReadUserResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadUserResponse) ProtoMessage() {}

func (x *ReadUserResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_v1_store_manager_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadUserResponse.ProtoReflect.Descriptor instead.
func (*ReadUserResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_v1_store_manager_proto_rawDescGZIP(), []int{15}
}

func (x *ReadUserResponse) GetUser() *User {
	if x != nil {
		return x.User
	}
	return nil
}

// ReadUserByEmailResponse
//
// ReadUserByEmailResponse represents a response to get a user by email.
type ReadUserByEmailResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// user is the user.
	User *User `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
}

func (x *ReadUserByEmailResponse) Reset() {
	*x = ReadUserByEmailResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_v1_store_manager_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReadUserByEmailResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadUserByEmailResponse) ProtoMessage() {}

func (x *ReadUserByEmailResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_v1_store_manager_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadUserByEmailResponse.ProtoReflect.Descriptor instead.
func (*ReadUserByEmailResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_v1_store_manager_proto_rawDescGZIP(), []int{16}
}

func (x *ReadUserByEmailResponse) GetUser() *User {
	if x != nil {
		return x.User
	}
	return nil
}

// UpdateUserResponse
//
// UpdateUserResponse represents a response to update a user.
type UpdateUserResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// success is the success of the operation.
	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
}

func (x *UpdateUserResponse) Reset() {
	*x = UpdateUserResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_v1_store_manager_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateUserResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateUserResponse) ProtoMessage() {}

func (x *UpdateUserResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_v1_store_manager_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateUserResponse.ProtoReflect.Descriptor instead.
func (*UpdateUserResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_v1_store_manager_proto_rawDescGZIP(), []int{17}
}

func (x *UpdateUserResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

// DeleteUserResponse
//
// DeleteUserResponse represents a response to update a user.
type DeleteUserResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// success is the success of the operation.
	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
}

func (x *DeleteUserResponse) Reset() {
	*x = DeleteUserResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_v1_store_manager_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteUserResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteUserResponse) ProtoMessage() {}

func (x *DeleteUserResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_v1_store_manager_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteUserResponse.ProtoReflect.Descriptor instead.
func (*DeleteUserResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_v1_store_manager_proto_rawDescGZIP(), []int{18}
}

func (x *DeleteUserResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

// UpsertPrivacyPolicyResponse
//
// UpsertPrivacyPolicyResponse represents a response to create or update the privacy policy of a user.
type UpsertPrivacyPolicyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// success is the success of the operation.
	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
}

func (x *UpsertPrivacyPolicyResponse) Reset() {
	*x = UpsertPrivacyPolicyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_v1_store_manager_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpsertPrivacyPolicyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpsertPrivacyPolicyResponse) ProtoMessage() {}

func (x *UpsertPrivacyPolicyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_v1_store_manager_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpsertPrivacyPolicyResponse.ProtoReflect.Descriptor instead.
func (*UpsertPrivacyPolicyResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_v1_store_manager_proto_rawDescGZIP(), []int{19}
}

func (x *UpsertPrivacyPolicyResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

// ReadSubscriptionResponse
//
// ReadSubscriptionResponse represents a response to get a subscription.
type ReadSubscriptionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// subscription is the subscription.
	Subscription *Subscription `protobuf:"bytes,1,opt,name=subscription,proto3" json:"subscription,omitempty"`
}

func (x *ReadSubscriptionResponse) Reset() {
	*x = ReadSubscriptionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_v1_store_manager_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReadSubscriptionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadSubscriptionResponse) ProtoMessage() {}

func (x *ReadSubscriptionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_v1_store_manager_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadSubscriptionResponse.ProtoReflect.Descriptor instead.
func (*ReadSubscriptionResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_v1_store_manager_proto_rawDescGZIP(), []int{20}
}

func (x *ReadSubscriptionResponse) GetSubscription() *Subscription {
	if x != nil {
		return x.Subscription
	}
	return nil
}

// AddMemberResponse
//
// AddMemberResponse represents a response to add a member to a subscription.
type AddMemberResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// success is the success of the operation.
	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
}

func (x *AddMemberResponse) Reset() {
	*x = AddMemberResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_v1_store_manager_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddMemberResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddMemberResponse) ProtoMessage() {}

func (x *AddMemberResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_v1_store_manager_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddMemberResponse.ProtoReflect.Descriptor instead.
func (*AddMemberResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_v1_store_manager_proto_rawDescGZIP(), []int{21}
}

func (x *AddMemberResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

// RemoveMemberResponse
//
// RemoveMemberResponse represents a response to remove a member from a subscription.
type RemoveMemberResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// success is the success of the operation.
	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
}

func (x *RemoveMemberResponse) Reset() {
	*x = RemoveMemberResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_v1_store_manager_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveMemberResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveMemberResponse) ProtoMessage() {}

func (x *RemoveMemberResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_v1_store_manager_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveMemberResponse.ProtoReflect.Descriptor instead.
func (*RemoveMemberResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_v1_store_manager_proto_rawDescGZIP(), []int{22}
}

func (x *RemoveMemberResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

var File_api_proto_v1_store_manager_proto protoreflect.FileDescriptor

var file_api_proto_v1_store_manager_proto_rawDesc = []byte{
	0x0a, 0x20, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x76, 0x31, 0x2f, 0x73,
	0x74, 0x6f, 0x72, 0x65, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x10, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65,
	0x72, 0x2e, 0x76, 0x31, 0x1a, 0x1b, 0x62, 0x75, 0x66, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61,
	0x74, 0x65, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e,
	0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x2d, 0x67, 0x65, 0x6e, 0x2d, 0x6f, 0x70, 0x65,
	0x6e, 0x61, 0x70, 0x69, 0x76, 0x32, 0x2f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x61,
	0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0xcf, 0x02, 0x0a, 0x13, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x28, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x09, 0xba, 0x48,
	0x06, 0x72, 0x04, 0x10, 0x03, 0x18, 0x20, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x49, 0x64, 0x12, 0x31, 0x0a, 0x0e, 0x70, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x5f, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xba, 0x48, 0x07, 0x72,
	0x05, 0x10, 0x03, 0x28, 0x80, 0x38, 0x52, 0x0d, 0x70, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x4d, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65,
	0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x26, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x5f,
	0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x75, 0x62, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x42,
	0x09, 0xba, 0x48, 0x06, 0x82, 0x01, 0x03, 0x22, 0x01, 0x00, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x76,
	0x69, 0x64, 0x65, 0x72, 0x12, 0x47, 0x0a, 0x0c, 0x70, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65,
	0x64, 0x5f, 0x61, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x42, 0x08, 0xba, 0x48, 0x05, 0xb2, 0x01, 0x02, 0x32, 0x00,
	0x52, 0x0b, 0x70, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x64, 0x41, 0x74, 0x12, 0x43, 0x0a,
	0x0a, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x73, 0x5f, 0x61, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x42, 0x08, 0xba,
	0x48, 0x05, 0xb2, 0x01, 0x02, 0x32, 0x00, 0x52, 0x09, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x73,
	0x41, 0x74, 0x22, 0xea, 0x01, 0x0a, 0x0e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x50, 0x61,
	0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x26, 0x0a, 0x07, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xba, 0x48, 0x04, 0x1a, 0x02, 0x20, 0x01, 0x48,
	0x00, 0x52, 0x07, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x88, 0x01, 0x01, 0x12, 0x31, 0x0a,
	0x0d, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x09, 0x42, 0x0c, 0xba, 0x48, 0x09, 0x92, 0x01, 0x06, 0x22, 0x04, 0x72, 0x02,
	0x60, 0x01, 0x52, 0x0c, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x73,
	0x12, 0x29, 0x0a, 0x08, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x09, 0xba, 0x48, 0x06, 0x72, 0x04, 0x10, 0x03, 0x18, 0x20, 0x48, 0x01, 0x52,
	0x07, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x2b, 0x0a, 0x09, 0x67,
	0x69, 0x66, 0x74, 0x65, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x09,
	0xba, 0x48, 0x06, 0x72, 0x04, 0x10, 0x03, 0x18, 0x20, 0x48, 0x02, 0x52, 0x08, 0x67, 0x69, 0x66,
	0x74, 0x65, 0x64, 0x49, 0x64, 0x88, 0x01, 0x01, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x6d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x73, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x67, 0x69, 0x66, 0x74, 0x65, 0x64, 0x5f, 0x69, 0x64, 0x22,
	0xaf, 0x04, 0x0a, 0x0c, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x22, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x09, 0xba, 0x48, 0x06, 0x72, 0x04, 0x10, 0x03, 0x18, 0x20, 0x52, 0x06, 0x75, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x06, 0x61, 0x70, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x09, 0xba, 0x48, 0x06, 0x72, 0x04, 0x10, 0x03, 0x18, 0x20, 0x52,
	0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x12, 0x41, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x22, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x5f, 0x6d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x42, 0x09, 0xba, 0x48, 0x06, 0x82, 0x01, 0x03,
	0x22, 0x01, 0x00, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x46, 0x0a, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x22, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x5f,
	0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x75, 0x62, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x42, 0x09, 0xba, 0x48, 0x06,
	0x82, 0x01, 0x03, 0x22, 0x01, 0x00, 0x48, 0x00, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x88, 0x01,
	0x01, 0x12, 0x52, 0x0a, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x26, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x5f, 0x6d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x42, 0x09, 0xba, 0x48, 0x06,
	0x82, 0x01, 0x03, 0x22, 0x01, 0x00, 0x48, 0x01, 0x52, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f,
	0x72, 0x79, 0x88, 0x01, 0x01, 0x12, 0x62, 0x0a, 0x14, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x5f, 0x6d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x42, 0x03, 0xba, 0x48, 0x00, 0x48,
	0x02, 0x52, 0x13, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x50,
	0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x88, 0x01, 0x01, 0x12, 0x53, 0x0a, 0x0f, 0x70, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x5f, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x20, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x50, 0x61, 0x79,
	0x6c, 0x6f, 0x61, 0x64, 0x42, 0x03, 0xba, 0x48, 0x00, 0x48, 0x03, 0x52, 0x0e, 0x70, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x88, 0x01, 0x01, 0x42, 0x07,
	0x0a, 0x05, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x63, 0x61, 0x74, 0x65,
	0x67, 0x6f, 0x72, 0x79, 0x42, 0x17, 0x0a, 0x15, 0x5f, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x42, 0x12, 0x0a,
	0x10, 0x5f, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61,
	0x64, 0x22, 0xdb, 0x02, 0x0a, 0x0d, 0x50, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x50, 0x6f, 0x6c,
	0x69, 0x63, 0x79, 0x12, 0x23, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x09, 0xba, 0x48, 0x06, 0x72, 0x04, 0x10, 0x01, 0x18, 0x03, 0x52,
	0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x45, 0x0a, 0x0b, 0x70, 0x6f, 0x6c, 0x69,
	0x63, 0x79, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x42, 0x08, 0xba, 0x48, 0x05, 0xb2, 0x01,
	0x02, 0x32, 0x00, 0x52, 0x0a, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x44, 0x61, 0x74, 0x65, 0x12,
	0x49, 0x0a, 0x0d, 0x61, 0x63, 0x63, 0x65, 0x70, 0x74, 0x65, 0x64, 0x5f, 0x64, 0x61, 0x74, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x42, 0x08, 0xba, 0x48, 0x05, 0xb2, 0x01, 0x02, 0x32, 0x00, 0x52, 0x0c, 0x61, 0x63,
	0x63, 0x65, 0x70, 0x74, 0x65, 0x64, 0x44, 0x61, 0x74, 0x65, 0x12, 0x37, 0x0a, 0x17, 0x62, 0x75,
	0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x16, 0x62, 0x75, 0x73,
	0x69, 0x6e, 0x65, 0x73, 0x73, 0x43, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x12, 0x35, 0x0a, 0x16, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x69, 0x6e, 0x67,
	0x5f, 0x73, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x15, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x53, 0x65,
	0x67, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x23, 0x0a, 0x0d, 0x64, 0x61,
	0x74, 0x61, 0x5f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x0c, 0x64, 0x61, 0x74, 0x61, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x22,
	0xb0, 0x02, 0x0a, 0x04, 0x55, 0x73, 0x65, 0x72, 0x12, 0x19, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x09, 0xba, 0x48, 0x06, 0x72, 0x04, 0x10, 0x03, 0x18, 0x20, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x07, 0xba, 0x48, 0x04, 0x72, 0x02, 0x60, 0x01, 0x52, 0x05, 0x65, 0x6d, 0x61,
	0x69, 0x6c, 0x12, 0x22, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x09, 0xba, 0x48, 0x06, 0x72, 0x04, 0x10, 0x03, 0x18, 0x20, 0x48, 0x00, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x24, 0x0a, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x09, 0xba, 0x48, 0x06, 0x72, 0x04, 0x10, 0x03, 0x18, 0x20,
	0x48, 0x01, 0x52, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x88, 0x01, 0x01, 0x12, 0x45, 0x0a, 0x08,
	0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1e,
	0x2e, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x76,
	0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x42, 0x09,
	0xba, 0x48, 0x06, 0x82, 0x01, 0x03, 0x22, 0x01, 0x00, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69,
	0x64, 0x65, 0x72, 0x12, 0x4a, 0x0a, 0x10, 0x70, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x5f, 0x70,
	0x6f, 0x6c, 0x69, 0x63, 0x69, 0x65, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e,
	0x73, 0x74, 0x6f, 0x72, 0x65, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31,
	0x2e, 0x50, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52, 0x0f,
	0x70, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x69, 0x65, 0x73, 0x42,
	0x07, 0x0a, 0x05, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x69, 0x6d, 0x61,
	0x67, 0x65, 0x22, 0x9c, 0x02, 0x0a, 0x11, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65,
	0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x22, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x09, 0xba, 0x48, 0x06, 0x72, 0x04,
	0x10, 0x03, 0x18, 0x20, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x06,
	0x61, 0x70, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x09, 0xba, 0x48,
	0x06, 0x72, 0x04, 0x10, 0x03, 0x18, 0x20, 0x52, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x12, 0x1d,
	0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xba,
	0x48, 0x04, 0x72, 0x02, 0x60, 0x01, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x22, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x09, 0xba, 0x48, 0x06,
	0x72, 0x04, 0x10, 0x03, 0x18, 0x20, 0x48, 0x00, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x88, 0x01,
	0x01, 0x12, 0x24, 0x0a, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x09, 0xba, 0x48, 0x06, 0x72, 0x04, 0x10, 0x03, 0x18, 0x20, 0x48, 0x01, 0x52, 0x05, 0x69,
	0x6d, 0x61, 0x67, 0x65, 0x88, 0x01, 0x01, 0x12, 0x45, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69,
	0x64, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1e, 0x2e, 0x73, 0x74, 0x6f, 0x72,
	0x65, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65,
	0x72, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x42, 0x09, 0xba, 0x48, 0x06, 0x82, 0x01,
	0x03, 0x22, 0x01, 0x00, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x42, 0x07,
	0x0a, 0x05, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x69, 0x6d, 0x61, 0x67,
	0x65, 0x22, 0x57, 0x0a, 0x0f, 0x52, 0x65, 0x61, 0x64, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x22, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x09, 0xba, 0x48, 0x06, 0x72, 0x04, 0x10, 0x03, 0x18, 0x20,
	0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x06, 0x61, 0x70, 0x70, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x09, 0xba, 0x48, 0x06, 0x72, 0x04, 0x10,
	0x03, 0x18, 0x20, 0x52, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x22, 0x59, 0x0a, 0x16, 0x52, 0x65,
	0x61, 0x64, 0x55, 0x73, 0x65, 0x72, 0x42, 0x79, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x07, 0xba, 0x48, 0x04, 0x72, 0x02, 0x60, 0x01, 0x52, 0x05, 0x65, 0x6d,
	0x61, 0x69, 0x6c, 0x12, 0x20, 0x0a, 0x06, 0x61, 0x70, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x09, 0xba, 0x48, 0x06, 0x72, 0x04, 0x10, 0x03, 0x18, 0x20, 0x52, 0x05,
	0x61, 0x70, 0x70, 0x49, 0x64, 0x22, 0x8f, 0x02, 0x0a, 0x11, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x22, 0x0a, 0x07, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x09, 0xba, 0x48,
	0x06, 0x72, 0x04, 0x10, 0x03, 0x18, 0x20, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x20, 0x0a, 0x06, 0x61, 0x70, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x09, 0xba, 0x48, 0x06, 0x72, 0x04, 0x10, 0x03, 0x18, 0x20, 0x52, 0x05, 0x61, 0x70, 0x70, 0x49,
	0x64, 0x12, 0x22, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x09, 0xba, 0x48, 0x06, 0x72, 0x04, 0x10, 0x03, 0x18, 0x20, 0x48, 0x00, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x24, 0x0a, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x09, 0xba, 0x48, 0x06, 0x72, 0x04, 0x10, 0x03, 0x18, 0x20, 0x48,
	0x01, 0x52, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x88, 0x01, 0x01, 0x12, 0x4a, 0x0a, 0x08, 0x70,
	0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1e, 0x2e,
	0x73, 0x74, 0x6f, 0x72, 0x65, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31,
	0x2e, 0x55, 0x73, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x42, 0x09, 0xba,
	0x48, 0x06, 0x82, 0x01, 0x03, 0x22, 0x01, 0x00, 0x48, 0x02, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x76,
	0x69, 0x64, 0x65, 0x72, 0x88, 0x01, 0x01, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x42, 0x08, 0x0a, 0x06, 0x5f, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x70,
	0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x22, 0x59, 0x0a, 0x11, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x22, 0x0a, 0x07,
	0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x09, 0xba,
	0x48, 0x06, 0x72, 0x04, 0x10, 0x03, 0x18, 0x20, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x20, 0x0a, 0x06, 0x61, 0x70, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x09, 0xba, 0x48, 0x06, 0x72, 0x04, 0x10, 0x03, 0x18, 0x20, 0x52, 0x05, 0x61, 0x70, 0x70,
	0x49, 0x64, 0x22, 0xf7, 0x01, 0x0a, 0x1a, 0x55, 0x70, 0x73, 0x65, 0x72, 0x74, 0x50, 0x72, 0x69,
	0x76, 0x61, 0x63, 0x79, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x22, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x09, 0xba, 0x48, 0x06, 0x72, 0x04, 0x10, 0x03, 0x18, 0x20, 0x52, 0x06, 0x75,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x06, 0x61, 0x70, 0x70, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x09, 0xba, 0x48, 0x06, 0x72, 0x04, 0x10, 0x03, 0x18, 0x20,
	0x52, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x12, 0x37, 0x0a, 0x17, 0x62, 0x75, 0x73, 0x69, 0x6e,
	0x65, 0x73, 0x73, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x16, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65,
	0x73, 0x73, 0x43, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x12, 0x35, 0x0a, 0x16, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x73, 0x65,
	0x67, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x15, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x53, 0x65, 0x67, 0x6d, 0x65,
	0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x23, 0x0a, 0x0d, 0x64, 0x61, 0x74, 0x61, 0x5f,
	0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c,
	0x64, 0x61, 0x74, 0x61, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x22, 0x5f, 0x0a, 0x17,
	0x52, 0x65, 0x61, 0x64, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x22, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x09, 0xba, 0x48, 0x06, 0x72, 0x04, 0x10,
	0x03, 0x18, 0x20, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x06, 0x61,
	0x70, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x09, 0xba, 0x48, 0x06,
	0x72, 0x04, 0x10, 0x03, 0x18, 0x20, 0x52, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x22, 0x7f, 0x0a,
	0x10, 0x41, 0x64, 0x64, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x22, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x09, 0xba, 0x48, 0x06, 0x72, 0x04, 0x10, 0x03, 0x18, 0x20, 0x52, 0x06, 0x75,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x06, 0x61, 0x70, 0x70, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x09, 0xba, 0x48, 0x06, 0x72, 0x04, 0x10, 0x03, 0x18, 0x20,
	0x52, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x09, 0x72, 0x65, 0x63, 0x69, 0x70,
	0x69, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xba, 0x48, 0x04, 0x72,
	0x02, 0x60, 0x01, 0x52, 0x09, 0x72, 0x65, 0x63, 0x69, 0x70, 0x69, 0x65, 0x6e, 0x74, 0x22, 0x82,
	0x01, 0x0a, 0x13, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x22, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x09, 0xba, 0x48, 0x06, 0x72, 0x04, 0x10, 0x03,
	0x18, 0x20, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x06, 0x61, 0x70,
	0x70, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x09, 0xba, 0x48, 0x06, 0x72,
	0x04, 0x10, 0x03, 0x18, 0x20, 0x52, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x09,
	0x72, 0x65, 0x63, 0x69, 0x70, 0x69, 0x65, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x07, 0xba, 0x48, 0x04, 0x72, 0x02, 0x60, 0x01, 0x52, 0x09, 0x72, 0x65, 0x63, 0x69, 0x70, 0x69,
	0x65, 0x6e, 0x74, 0x22, 0x2e, 0x0a, 0x12, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65,
	0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x22, 0x3e, 0x0a, 0x10, 0x52, 0x65, 0x61, 0x64, 0x55, 0x73, 0x65, 0x72, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2a, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x5f, 0x6d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x04, 0x75,
	0x73, 0x65, 0x72, 0x22, 0x45, 0x0a, 0x17, 0x52, 0x65, 0x61, 0x64, 0x55, 0x73, 0x65, 0x72, 0x42,
	0x79, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2a,
	0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x73,
	0x74, 0x6f, 0x72, 0x65, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e,
	0x55, 0x73, 0x65, 0x72, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x22, 0x2e, 0x0a, 0x12, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x22, 0x2e, 0x0a, 0x12, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x22, 0x37, 0x0a, 0x1b, 0x55, 0x70,
	0x73, 0x65, 0x72, 0x74, 0x50, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x50, 0x6f, 0x6c, 0x69, 0x63,
	0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x22, 0x5e, 0x0a, 0x18, 0x52, 0x65, 0x61, 0x64, 0x53, 0x75, 0x62, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x42, 0x0a, 0x0c, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x5f, 0x6d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0c, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x22, 0x2d, 0x0a, 0x11, 0x41, 0x64, 0x64, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x22, 0x30, 0x0a, 0x14, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x4d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x2a, 0x7a, 0x0a, 0x0c, 0x55, 0x73, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x76,
	0x69, 0x64, 0x65, 0x72, 0x12, 0x1d, 0x0a, 0x19, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x50, 0x52, 0x4f,
	0x56, 0x49, 0x44, 0x45, 0x52, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45,
	0x44, 0x10, 0x00, 0x12, 0x17, 0x0a, 0x13, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x50, 0x52, 0x4f, 0x56,
	0x49, 0x44, 0x45, 0x52, 0x5f, 0x41, 0x50, 0x50, 0x4c, 0x45, 0x10, 0x01, 0x12, 0x18, 0x0a, 0x14,
	0x55, 0x53, 0x45, 0x52, 0x5f, 0x50, 0x52, 0x4f, 0x56, 0x49, 0x44, 0x45, 0x52, 0x5f, 0x47, 0x4f,
	0x4f, 0x47, 0x4c, 0x45, 0x10, 0x02, 0x12, 0x18, 0x0a, 0x14, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x50,
	0x52, 0x4f, 0x56, 0x49, 0x44, 0x45, 0x52, 0x5f, 0x43, 0x55, 0x53, 0x54, 0x4f, 0x4d, 0x10, 0x03,
	0x2a, 0xb3, 0x01, 0x0a, 0x10, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x21, 0x0a, 0x1d, 0x53, 0x55, 0x42, 0x53, 0x43, 0x52, 0x49,
	0x50, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45,
	0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x1b, 0x0a, 0x17, 0x53, 0x55, 0x42, 0x53,
	0x43, 0x52, 0x49, 0x50, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x54, 0x52,
	0x49, 0x41, 0x4c, 0x10, 0x01, 0x12, 0x1d, 0x0a, 0x19, 0x53, 0x55, 0x42, 0x53, 0x43, 0x52, 0x49,
	0x50, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x50, 0x52, 0x45, 0x4d, 0x49,
	0x55, 0x4d, 0x10, 0x02, 0x12, 0x24, 0x0a, 0x20, 0x53, 0x55, 0x42, 0x53, 0x43, 0x52, 0x49, 0x50,
	0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x4d, 0x41, 0x4e, 0x55, 0x41, 0x4c,
	0x5f, 0x50, 0x52, 0x45, 0x4d, 0x49, 0x55, 0x4d, 0x10, 0x03, 0x12, 0x1a, 0x0a, 0x16, 0x53, 0x55,
	0x42, 0x53, 0x43, 0x52, 0x49, 0x50, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f,
	0x46, 0x52, 0x45, 0x45, 0x10, 0x04, 0x2a, 0xb3, 0x01, 0x0a, 0x10, 0x53, 0x75, 0x62, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x21, 0x0a, 0x1d, 0x53,
	0x55, 0x42, 0x53, 0x43, 0x52, 0x49, 0x50, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x43, 0x4f, 0x44, 0x45,
	0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x1d,
	0x0a, 0x19, 0x53, 0x55, 0x42, 0x53, 0x43, 0x52, 0x49, 0x50, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x43,
	0x4f, 0x44, 0x45, 0x5f, 0x53, 0x54, 0x41, 0x52, 0x54, 0x45, 0x44, 0x10, 0x01, 0x12, 0x1d, 0x0a,
	0x19, 0x53, 0x55, 0x42, 0x53, 0x43, 0x52, 0x49, 0x50, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x43, 0x4f,
	0x44, 0x45, 0x5f, 0x52, 0x45, 0x4e, 0x45, 0x57, 0x45, 0x44, 0x10, 0x02, 0x12, 0x1f, 0x0a, 0x1b,
	0x53, 0x55, 0x42, 0x53, 0x43, 0x52, 0x49, 0x50, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x43, 0x4f, 0x44,
	0x45, 0x5f, 0x43, 0x41, 0x4e, 0x43, 0x45, 0x4c, 0x4c, 0x45, 0x44, 0x10, 0x03, 0x12, 0x1d, 0x0a,
	0x19, 0x53, 0x55, 0x42, 0x53, 0x43, 0x52, 0x49, 0x50, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x43, 0x4f,
	0x44, 0x45, 0x5f, 0x45, 0x58, 0x50, 0x49, 0x52, 0x45, 0x44, 0x10, 0x04, 0x2a, 0xc6, 0x01, 0x0a,
	0x14, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x6f,
	0x76, 0x69, 0x64, 0x65, 0x72, 0x12, 0x25, 0x0a, 0x21, 0x53, 0x55, 0x42, 0x53, 0x43, 0x52, 0x49,
	0x50, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x50, 0x52, 0x4f, 0x56, 0x49, 0x44, 0x45, 0x52, 0x5f, 0x55,
	0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x1f, 0x0a, 0x1b,
	0x53, 0x55, 0x42, 0x53, 0x43, 0x52, 0x49, 0x50, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x50, 0x52, 0x4f,
	0x56, 0x49, 0x44, 0x45, 0x52, 0x5f, 0x41, 0x50, 0x50, 0x4c, 0x45, 0x10, 0x01, 0x12, 0x20, 0x0a,
	0x1c, 0x53, 0x55, 0x42, 0x53, 0x43, 0x52, 0x49, 0x50, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x50, 0x52,
	0x4f, 0x56, 0x49, 0x44, 0x45, 0x52, 0x5f, 0x47, 0x4f, 0x4f, 0x47, 0x4c, 0x45, 0x10, 0x02, 0x12,
	0x20, 0x0a, 0x1c, 0x53, 0x55, 0x42, 0x53, 0x43, 0x52, 0x49, 0x50, 0x54, 0x49, 0x4f, 0x4e, 0x5f,
	0x50, 0x52, 0x4f, 0x56, 0x49, 0x44, 0x45, 0x52, 0x5f, 0x53, 0x54, 0x52, 0x49, 0x50, 0x45, 0x10,
	0x03, 0x12, 0x22, 0x0a, 0x1e, 0x53, 0x55, 0x42, 0x53, 0x43, 0x52, 0x49, 0x50, 0x54, 0x49, 0x4f,
	0x4e, 0x5f, 0x50, 0x52, 0x4f, 0x56, 0x49, 0x44, 0x45, 0x52, 0x5f, 0x50, 0x41, 0x59, 0x43, 0x4f,
	0x4d, 0x45, 0x54, 0x10, 0x04, 0x2a, 0x7e, 0x0a, 0x14, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x25, 0x0a,
	0x21, 0x53, 0x55, 0x42, 0x53, 0x43, 0x52, 0x49, 0x50, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x43, 0x41,
	0x54, 0x45, 0x47, 0x4f, 0x52, 0x59, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49,
	0x45, 0x44, 0x10, 0x00, 0x12, 0x1e, 0x0a, 0x1a, 0x53, 0x55, 0x42, 0x53, 0x43, 0x52, 0x49, 0x50,
	0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x43, 0x41, 0x54, 0x45, 0x47, 0x4f, 0x52, 0x59, 0x5f, 0x47, 0x49,
	0x46, 0x54, 0x10, 0x01, 0x12, 0x1f, 0x0a, 0x1b, 0x53, 0x55, 0x42, 0x53, 0x43, 0x52, 0x49, 0x50,
	0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x43, 0x41, 0x54, 0x45, 0x47, 0x4f, 0x52, 0x59, 0x5f, 0x47, 0x52,
	0x4f, 0x55, 0x50, 0x10, 0x02, 0x32, 0xd5, 0x0a, 0x0a, 0x0c, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x85, 0x01, 0x0a, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x55, 0x73, 0x65, 0x72, 0x12, 0x23, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x5f, 0x6d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55,
	0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x73, 0x74, 0x6f,
	0x72, 0x65, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x2c, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x26, 0x3a, 0x01, 0x2a, 0x1a, 0x21, 0x2f, 0x76, 0x31,
	0x2f, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2f, 0x7b, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x7d,
	0x2f, 0x61, 0x70, 0x70, 0x73, 0x2f, 0x7b, 0x61, 0x70, 0x70, 0x5f, 0x69, 0x64, 0x7d, 0x12, 0x7c,
	0x0a, 0x08, 0x52, 0x65, 0x61, 0x64, 0x55, 0x73, 0x65, 0x72, 0x12, 0x21, 0x2e, 0x73, 0x74, 0x6f,
	0x72, 0x65, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65,
	0x61, 0x64, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e,
	0x73, 0x74, 0x6f, 0x72, 0x65, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31,
	0x2e, 0x52, 0x65, 0x61, 0x64, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x29, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x23, 0x12, 0x21, 0x2f, 0x76, 0x31, 0x2f, 0x75,
	0x73, 0x65, 0x72, 0x73, 0x2f, 0x7b, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x61,
	0x70, 0x70, 0x73, 0x2f, 0x7b, 0x61, 0x70, 0x70, 0x5f, 0x69, 0x64, 0x7d, 0x12, 0x95, 0x01, 0x0a,
	0x0f, 0x52, 0x65, 0x61, 0x64, 0x55, 0x73, 0x65, 0x72, 0x42, 0x79, 0x45, 0x6d, 0x61, 0x69, 0x6c,
	0x12, 0x28, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72,
	0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x61, 0x64, 0x55, 0x73, 0x65, 0x72, 0x42, 0x79, 0x45, 0x6d,
	0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x73, 0x74, 0x6f,
	0x72, 0x65, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65,
	0x61, 0x64, 0x55, 0x73, 0x65, 0x72, 0x42, 0x79, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2d, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x27, 0x12, 0x25, 0x2f,
	0x76, 0x31, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2f, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x2f, 0x7b,
	0x65, 0x6d, 0x61, 0x69, 0x6c, 0x7d, 0x2f, 0x61, 0x70, 0x70, 0x73, 0x2f, 0x7b, 0x61, 0x70, 0x70,
	0x5f, 0x69, 0x64, 0x7d, 0x12, 0x85, 0x01, 0x0a, 0x0a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55,
	0x73, 0x65, 0x72, 0x12, 0x23, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x5f, 0x6d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65,
	0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x65,
	0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2c,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x26, 0x3a, 0x01, 0x2a, 0x22, 0x21, 0x2f, 0x76, 0x31, 0x2f, 0x75,
	0x73, 0x65, 0x72, 0x73, 0x2f, 0x7b, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x61,
	0x70, 0x70, 0x73, 0x2f, 0x7b, 0x61, 0x70, 0x70, 0x5f, 0x69, 0x64, 0x7d, 0x12, 0x82, 0x01, 0x0a,
	0x0a, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x12, 0x23, 0x2e, 0x73, 0x74,
	0x6f, 0x72, 0x65, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x24, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72,
	0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x29, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x23, 0x2a, 0x21,
	0x2f, 0x76, 0x31, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2f, 0x7b, 0x75, 0x73, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x7d, 0x2f, 0x61, 0x70, 0x70, 0x73, 0x2f, 0x7b, 0x61, 0x70, 0x70, 0x5f, 0x69, 0x64,
	0x7d, 0x12, 0xaf, 0x01, 0x0a, 0x13, 0x55, 0x70, 0x73, 0x65, 0x72, 0x74, 0x50, 0x72, 0x69, 0x76,
	0x61, 0x63, 0x79, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x12, 0x2c, 0x2e, 0x73, 0x74, 0x6f, 0x72,
	0x65, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x73,
	0x65, 0x72, 0x74, 0x50, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2d, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x5f,
	0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x73, 0x65, 0x72,
	0x74, 0x50, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x3b, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x35, 0x3a, 0x01,
	0x2a, 0x22, 0x30, 0x2f, 0x76, 0x31, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2f, 0x7b, 0x75, 0x73,
	0x65, 0x72, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x61, 0x70, 0x70, 0x73, 0x2f, 0x7b, 0x61, 0x70, 0x70,
	0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x70, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x2d, 0x70, 0x6f, 0x6c,
	0x69, 0x63, 0x79, 0x12, 0xa1, 0x01, 0x0a, 0x10, 0x52, 0x65, 0x61, 0x64, 0x53, 0x75, 0x62, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x29, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x65,
	0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x61, 0x64,
	0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x5f, 0x6d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x61, 0x64, 0x53, 0x75, 0x62, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x36, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x30, 0x12, 0x2e, 0x2f, 0x76, 0x31, 0x2f, 0x75, 0x73, 0x65,
	0x72, 0x73, 0x2f, 0x7b, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x61, 0x70, 0x70,
	0x73, 0x2f, 0x7b, 0x61, 0x70, 0x70, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x73, 0x75, 0x62, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x97, 0x01, 0x0a, 0x09, 0x41, 0x64, 0x64, 0x4d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x22, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x5f, 0x6d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x64, 0x4d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x73, 0x74, 0x6f, 0x72,
	0x65, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x64,
	0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x41,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x3b, 0x3a, 0x01, 0x2a, 0x1a, 0x36, 0x2f, 0x76, 0x31, 0x2f, 0x75,
	0x73, 0x65, 0x72, 0x73, 0x2f, 0x7b, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x61,
	0x70, 0x70, 0x73, 0x2f, 0x7b, 0x61, 0x70, 0x70, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x73, 0x75, 0x62,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x73, 0x12, 0xa9, 0x01, 0x0a, 0x0c, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x4d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x12, 0x25, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x4d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x73, 0x74, 0x6f, 0x72,
	0x65, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x6d,
	0x6f, 0x76, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x4a, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x44, 0x2a, 0x42, 0x2f, 0x76, 0x31, 0x2f, 0x75,
	0x73, 0x65, 0x72, 0x73, 0x2f, 0x7b, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x61,
	0x70, 0x70, 0x73, 0x2f, 0x7b, 0x61, 0x70, 0x70, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x73, 0x75, 0x62,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x73, 0x2f, 0x7b, 0x72, 0x65, 0x63, 0x69, 0x70, 0x69, 0x65, 0x6e, 0x74, 0x7d, 0x42, 0xbe, 0x03,
	0x92, 0x41, 0xac, 0x02, 0x12, 0x67, 0x0a, 0x11, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x20, 0x6d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x72, 0x20, 0x41, 0x50, 0x49, 0x22, 0x4b, 0x0a, 0x05, 0x4e, 0x42, 0x4e,
	0x32, 0x33, 0x12, 0x2f, 0x68, 0x74, 0x74, 0x70, 0x73, 0x3a, 0x2f, 0x2f, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x4e, 0x42, 0x4e, 0x32, 0x33, 0x64, 0x65, 0x76, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2d, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2d, 0x6d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x72, 0x1a, 0x11, 0x64, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x40, 0x6e, 0x62, 0x6e,
	0x32, 0x33, 0x2e, 0x63, 0x6f, 0x6d, 0x32, 0x05, 0x31, 0x2e, 0x30, 0x2e, 0x30, 0x1a, 0x29, 0x67,
	0x63, 0x72, 0x2d, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2d, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72,
	0x2d, 0x6b, 0x67, 0x6a, 0x75, 0x33, 0x6c, 0x6d, 0x72, 0x79, 0x61, 0x2d, 0x65, 0x77, 0x2e, 0x61,
	0x2e, 0x72, 0x75, 0x6e, 0x2e, 0x61, 0x70, 0x70, 0x2a, 0x01, 0x02, 0x32, 0x10, 0x61, 0x70, 0x70,
	0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x6a, 0x73, 0x6f, 0x6e, 0x3a, 0x10, 0x61,
	0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x6a, 0x73, 0x6f, 0x6e, 0x5a,
	0x61, 0x0a, 0x5f, 0x0a, 0x06, 0x62, 0x65, 0x61, 0x72, 0x65, 0x72, 0x12, 0x55, 0x08, 0x02, 0x12,
	0x40, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x20,
	0x62, 0x65, 0x61, 0x72, 0x65, 0x72, 0x20, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x3a, 0x20, 0x7b, 0x27,
	0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x27, 0x3a, 0x20,
	0x27, 0x42, 0x65, 0x61, 0x72, 0x65, 0x72, 0x20, 0x3c, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x3e, 0x27,
	0x7d, 0x1a, 0x0d, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x20, 0x02, 0x62, 0x0c, 0x0a, 0x0a, 0x0a, 0x06, 0x62, 0x65, 0x61, 0x72, 0x65, 0x72, 0x12, 0x00,
	0x0a, 0x14, 0x63, 0x6f, 0x6d, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x5f, 0x6d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x42, 0x11, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x4d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x06, 0x67, 0x65, 0x6e,
	0x2f, 0x67, 0x6f, 0xa2, 0x02, 0x03, 0x53, 0x58, 0x58, 0xaa, 0x02, 0x0f, 0x53, 0x74, 0x6f, 0x72,
	0x65, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x56, 0x31, 0xca, 0x02, 0x0f, 0x53, 0x74,
	0x6f, 0x72, 0x65, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x5c, 0x56, 0x31, 0xe2, 0x02, 0x1b,
	0x53, 0x74, 0x6f, 0x72, 0x65, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x5c, 0x56, 0x31, 0x5c,
	0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x10, 0x53, 0x74,
	0x6f, 0x72, 0x65, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x3a, 0x3a, 0x56, 0x31, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_api_proto_v1_store_manager_proto_rawDescOnce sync.Once
	file_api_proto_v1_store_manager_proto_rawDescData = file_api_proto_v1_store_manager_proto_rawDesc
)

func file_api_proto_v1_store_manager_proto_rawDescGZIP() []byte {
	file_api_proto_v1_store_manager_proto_rawDescOnce.Do(func() {
		file_api_proto_v1_store_manager_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_proto_v1_store_manager_proto_rawDescData)
	})
	return file_api_proto_v1_store_manager_proto_rawDescData
}

var file_api_proto_v1_store_manager_proto_enumTypes = make([]protoimpl.EnumInfo, 5)
var file_api_proto_v1_store_manager_proto_msgTypes = make([]protoimpl.MessageInfo, 23)
var file_api_proto_v1_store_manager_proto_goTypes = []any{
	(UserProvider)(0),                   // 0: store_manager.v1.UserProvider
	(SubscriptionType)(0),               // 1: store_manager.v1.SubscriptionType
	(SubscriptionCode)(0),               // 2: store_manager.v1.SubscriptionCode
	(SubscriptionProvider)(0),           // 3: store_manager.v1.SubscriptionProvider
	(SubscriptionCategory)(0),           // 4: store_manager.v1.SubscriptionCategory
	(*SubscriptionPayload)(nil),         // 5: store_manager.v1.SubscriptionPayload
	(*ProductPayload)(nil),              // 6: store_manager.v1.ProductPayload
	(*Subscription)(nil),                // 7: store_manager.v1.Subscription
	(*PrivacyPolicy)(nil),               // 8: store_manager.v1.PrivacyPolicy
	(*User)(nil),                        // 9: store_manager.v1.User
	(*CreateUserRequest)(nil),           // 10: store_manager.v1.CreateUserRequest
	(*ReadUserRequest)(nil),             // 11: store_manager.v1.ReadUserRequest
	(*ReadUserByEmailRequest)(nil),      // 12: store_manager.v1.ReadUserByEmailRequest
	(*UpdateUserRequest)(nil),           // 13: store_manager.v1.UpdateUserRequest
	(*DeleteUserRequest)(nil),           // 14: store_manager.v1.DeleteUserRequest
	(*UpsertPrivacyPolicyRequest)(nil),  // 15: store_manager.v1.UpsertPrivacyPolicyRequest
	(*ReadSubscriptionRequest)(nil),     // 16: store_manager.v1.ReadSubscriptionRequest
	(*AddMemberRequest)(nil),            // 17: store_manager.v1.AddMemberRequest
	(*RemoveMemberRequest)(nil),         // 18: store_manager.v1.RemoveMemberRequest
	(*CreateUserResponse)(nil),          // 19: store_manager.v1.CreateUserResponse
	(*ReadUserResponse)(nil),            // 20: store_manager.v1.ReadUserResponse
	(*ReadUserByEmailResponse)(nil),     // 21: store_manager.v1.ReadUserByEmailResponse
	(*UpdateUserResponse)(nil),          // 22: store_manager.v1.UpdateUserResponse
	(*DeleteUserResponse)(nil),          // 23: store_manager.v1.DeleteUserResponse
	(*UpsertPrivacyPolicyResponse)(nil), // 24: store_manager.v1.UpsertPrivacyPolicyResponse
	(*ReadSubscriptionResponse)(nil),    // 25: store_manager.v1.ReadSubscriptionResponse
	(*AddMemberResponse)(nil),           // 26: store_manager.v1.AddMemberResponse
	(*RemoveMemberResponse)(nil),        // 27: store_manager.v1.RemoveMemberResponse
	(*timestamppb.Timestamp)(nil),       // 28: google.protobuf.Timestamp
}
var file_api_proto_v1_store_manager_proto_depIdxs = []int32{
	3,  // 0: store_manager.v1.SubscriptionPayload.provider:type_name -> store_manager.v1.SubscriptionProvider
	28, // 1: store_manager.v1.SubscriptionPayload.purchased_at:type_name -> google.protobuf.Timestamp
	28, // 2: store_manager.v1.SubscriptionPayload.expires_at:type_name -> google.protobuf.Timestamp
	1,  // 3: store_manager.v1.Subscription.type:type_name -> store_manager.v1.SubscriptionType
	2,  // 4: store_manager.v1.Subscription.code:type_name -> store_manager.v1.SubscriptionCode
	4,  // 5: store_manager.v1.Subscription.category:type_name -> store_manager.v1.SubscriptionCategory
	5,  // 6: store_manager.v1.Subscription.subscription_payload:type_name -> store_manager.v1.SubscriptionPayload
	6,  // 7: store_manager.v1.Subscription.product_payload:type_name -> store_manager.v1.ProductPayload
	28, // 8: store_manager.v1.PrivacyPolicy.policy_date:type_name -> google.protobuf.Timestamp
	28, // 9: store_manager.v1.PrivacyPolicy.accepted_date:type_name -> google.protobuf.Timestamp
	0,  // 10: store_manager.v1.User.provider:type_name -> store_manager.v1.UserProvider
	8,  // 11: store_manager.v1.User.privacy_policies:type_name -> store_manager.v1.PrivacyPolicy
	0,  // 12: store_manager.v1.CreateUserRequest.provider:type_name -> store_manager.v1.UserProvider
	0,  // 13: store_manager.v1.UpdateUserRequest.provider:type_name -> store_manager.v1.UserProvider
	9,  // 14: store_manager.v1.ReadUserResponse.user:type_name -> store_manager.v1.User
	9,  // 15: store_manager.v1.ReadUserByEmailResponse.user:type_name -> store_manager.v1.User
	7,  // 16: store_manager.v1.ReadSubscriptionResponse.subscription:type_name -> store_manager.v1.Subscription
	10, // 17: store_manager.v1.StoreService.CreateUser:input_type -> store_manager.v1.CreateUserRequest
	11, // 18: store_manager.v1.StoreService.ReadUser:input_type -> store_manager.v1.ReadUserRequest
	12, // 19: store_manager.v1.StoreService.ReadUserByEmail:input_type -> store_manager.v1.ReadUserByEmailRequest
	13, // 20: store_manager.v1.StoreService.UpdateUser:input_type -> store_manager.v1.UpdateUserRequest
	14, // 21: store_manager.v1.StoreService.DeleteUser:input_type -> store_manager.v1.DeleteUserRequest
	15, // 22: store_manager.v1.StoreService.UpsertPrivacyPolicy:input_type -> store_manager.v1.UpsertPrivacyPolicyRequest
	16, // 23: store_manager.v1.StoreService.ReadSubscription:input_type -> store_manager.v1.ReadSubscriptionRequest
	17, // 24: store_manager.v1.StoreService.AddMember:input_type -> store_manager.v1.AddMemberRequest
	18, // 25: store_manager.v1.StoreService.RemoveMember:input_type -> store_manager.v1.RemoveMemberRequest
	19, // 26: store_manager.v1.StoreService.CreateUser:output_type -> store_manager.v1.CreateUserResponse
	20, // 27: store_manager.v1.StoreService.ReadUser:output_type -> store_manager.v1.ReadUserResponse
	21, // 28: store_manager.v1.StoreService.ReadUserByEmail:output_type -> store_manager.v1.ReadUserByEmailResponse
	22, // 29: store_manager.v1.StoreService.UpdateUser:output_type -> store_manager.v1.UpdateUserResponse
	23, // 30: store_manager.v1.StoreService.DeleteUser:output_type -> store_manager.v1.DeleteUserResponse
	24, // 31: store_manager.v1.StoreService.UpsertPrivacyPolicy:output_type -> store_manager.v1.UpsertPrivacyPolicyResponse
	25, // 32: store_manager.v1.StoreService.ReadSubscription:output_type -> store_manager.v1.ReadSubscriptionResponse
	26, // 33: store_manager.v1.StoreService.AddMember:output_type -> store_manager.v1.AddMemberResponse
	27, // 34: store_manager.v1.StoreService.RemoveMember:output_type -> store_manager.v1.RemoveMemberResponse
	26, // [26:35] is the sub-list for method output_type
	17, // [17:26] is the sub-list for method input_type
	17, // [17:17] is the sub-list for extension type_name
	17, // [17:17] is the sub-list for extension extendee
	0,  // [0:17] is the sub-list for field type_name
}

func init() { file_api_proto_v1_store_manager_proto_init() }
func file_api_proto_v1_store_manager_proto_init() {
	if File_api_proto_v1_store_manager_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_api_proto_v1_store_manager_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*SubscriptionPayload); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_v1_store_manager_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*ProductPayload); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_v1_store_manager_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*Subscription); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_v1_store_manager_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*PrivacyPolicy); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_v1_store_manager_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*User); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_v1_store_manager_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*CreateUserRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_v1_store_manager_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*ReadUserRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_v1_store_manager_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*ReadUserByEmailRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_v1_store_manager_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateUserRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_v1_store_manager_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*DeleteUserRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_v1_store_manager_proto_msgTypes[10].Exporter = func(v any, i int) any {
			switch v := v.(*UpsertPrivacyPolicyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_v1_store_manager_proto_msgTypes[11].Exporter = func(v any, i int) any {
			switch v := v.(*ReadSubscriptionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_v1_store_manager_proto_msgTypes[12].Exporter = func(v any, i int) any {
			switch v := v.(*AddMemberRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_v1_store_manager_proto_msgTypes[13].Exporter = func(v any, i int) any {
			switch v := v.(*RemoveMemberRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_v1_store_manager_proto_msgTypes[14].Exporter = func(v any, i int) any {
			switch v := v.(*CreateUserResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_v1_store_manager_proto_msgTypes[15].Exporter = func(v any, i int) any {
			switch v := v.(*ReadUserResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_v1_store_manager_proto_msgTypes[16].Exporter = func(v any, i int) any {
			switch v := v.(*ReadUserByEmailResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_v1_store_manager_proto_msgTypes[17].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateUserResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_v1_store_manager_proto_msgTypes[18].Exporter = func(v any, i int) any {
			switch v := v.(*DeleteUserResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_v1_store_manager_proto_msgTypes[19].Exporter = func(v any, i int) any {
			switch v := v.(*UpsertPrivacyPolicyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_v1_store_manager_proto_msgTypes[20].Exporter = func(v any, i int) any {
			switch v := v.(*ReadSubscriptionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_v1_store_manager_proto_msgTypes[21].Exporter = func(v any, i int) any {
			switch v := v.(*AddMemberResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_v1_store_manager_proto_msgTypes[22].Exporter = func(v any, i int) any {
			switch v := v.(*RemoveMemberResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_api_proto_v1_store_manager_proto_msgTypes[1].OneofWrappers = []any{}
	file_api_proto_v1_store_manager_proto_msgTypes[2].OneofWrappers = []any{}
	file_api_proto_v1_store_manager_proto_msgTypes[4].OneofWrappers = []any{}
	file_api_proto_v1_store_manager_proto_msgTypes[5].OneofWrappers = []any{}
	file_api_proto_v1_store_manager_proto_msgTypes[8].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_proto_v1_store_manager_proto_rawDesc,
			NumEnums:      5,
			NumMessages:   23,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_proto_v1_store_manager_proto_goTypes,
		DependencyIndexes: file_api_proto_v1_store_manager_proto_depIdxs,
		EnumInfos:         file_api_proto_v1_store_manager_proto_enumTypes,
		MessageInfos:      file_api_proto_v1_store_manager_proto_msgTypes,
	}.Build()
	File_api_proto_v1_store_manager_proto = out.File
	file_api_proto_v1_store_manager_proto_rawDesc = nil
	file_api_proto_v1_store_manager_proto_goTypes = nil
	file_api_proto_v1_store_manager_proto_depIdxs = nil
}
